{"ast":null,"code":"var _jsxFileName = \"/Users/abe/Projects/abechoi.com/frontend/src/components/apps/AbeChoiApp.js\";\nimport React from \"react\";\nimport { HashLink as Link } from 'react-router-hash-link';\n\nconst AbeChoiApp = ({\n  project\n}) => {\n  const sections = project.sections;\n  return /*#__PURE__*/React.createElement(\"section\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"project-details\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"project-demo\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"app-nav-logo\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"app-logo-first\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 15\n    }\n  }, \"ABE\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"app-logo-last\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 15\n    }\n  }, \"CHOI\"))), /*#__PURE__*/React.createElement(\"h1\", {\n    className: \"title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 9\n    }\n  }, project.title), /*#__PURE__*/React.createElement(\"p\", {\n    className: \"date\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 9\n    }\n  }, project.createdAt), /*#__PURE__*/React.createElement(\"h3\", {\n    className: \"table-header\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 9\n    }\n  }, \"Table of Contents\"), /*#__PURE__*/React.createElement(\"ol\", {\n    className: \"table-of-contents\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 9\n    }\n  }, sections.map(section => /*#__PURE__*/React.createElement(\"li\", {\n    className: \"app-link\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Link, {\n    to: \"/abechoi#section\" + (sections.indexOf(section) + 1),\n    scroll: el => el.scrollIntoView({\n      behavior: 'smooth',\n      block: 'center'\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 15\n    }\n  }, section)))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"app-section\",\n    id: \"section1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 11\n    }\n  }, \"Summary\"), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 11\n    }\n  }, \"I wanted to make a React website to showcase my React apps - and while this website is still on its way to completion, there are still a few things I need to fix up. I currently have over 600 lines of CSS which I intend on reducing, I\\u2019m even considering to rewrite a lot of the CSS using a grid display for easier maneuverability for media queries.\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"app-section\",\n    id: \"section2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 11\n    }\n  }, \"Notable Technologies\"), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 11\n    }\n  }, \"During this project, I learned a lot about routing; more specifically, react-router-dom. I\\u2019ve had my fair share of frustrations with routing, so much so, that I almost posted on StackOverflow twice! However, I somehow managed to keep playing around with the code in different variations until I was able to overcome them. I\\u2019ve used FontAwesome once before but I thought I would mention it since I find it very awesome. It\\u2019s easy to use and very customizable. I learned how to use AWS Amplify, as I have used it to deploy this website, and was extremely easy to use.\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"app-section\",\n    id: \"section3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 11\n    }\n  }, \"Troubleshooting and Debugging\"), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 11\n    }\n  }, \"The longest running issue I had with developing is definitely the routing part. For the projects page, I had a hard time using a map function to create the routes and another map function to create the links, eventually I moved the routes into the App component and resolved the issue. Deployment wasn\\u2019t difficult. I spent a lot of time having issues with mapping my domain name to my AWS Lightsail instance, so I just decided to use AWS Amplify. I believe I had DNS issues because I didn\\u2019t delete a record that I was supposed to, so I will have to give Lightsail another go in the future. Maybe I\\u2019ll write a doc about it.\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"app-section\",\n    id: \"section4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 11\n    }\n  }, \"Future Development\"), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 11\n    }\n  }, \"I still have to clean up the CSS and move to a grid display. Then I want to add a backend to retrieve my site data, such as blogs and docs. While all this is happening, I will have to keep developing other projects to fill up the projects page. My next project will probably focus on APIs and GraphQL, I have a bookmarked GraphQL course on Youtube by The Net Ninja with 36 videos so I guess I should get started as soon as possible.\"))));\n};\n\nexport default AbeChoiApp;","map":{"version":3,"sources":["/Users/abe/Projects/abechoi.com/frontend/src/components/apps/AbeChoiApp.js"],"names":["React","HashLink","Link","AbeChoiApp","project","sections","title","createdAt","map","section","indexOf","el","scrollIntoView","behavior","block"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { HashLink as Link } from 'react-router-hash-link';\n\nconst AbeChoiApp = ({project}) => {\n\n  const sections = project.sections;\n\n  return (\n    <section>\n      <div className=\"project-details\">\n\n        <div className=\"project-demo\">\n          <div className=\"app-nav-logo\">\n              <div className=\"app-logo-first\">ABE</div>\n              <div className=\"app-logo-last\">CHOI</div>\n          </div>\n        </div>\n\n        <h1 className=\"title\">{project.title}</h1>\n        <p className=\"date\">{project.createdAt}</p>\n        <h3 className=\"table-header\">Table of Contents</h3>\n  \n        <ol className=\"table-of-contents\">\n\n          {sections.map(section => (\n            <li className=\"app-link\">\n              <Link  to={\"/abechoi#section\"+(sections.indexOf(section) + 1)}\n              scroll={el => el.scrollIntoView({ behavior: 'smooth', block: 'center' })}>{ section }</Link>\n            </li>\n          ))}\n\n        </ol>\n\n        <div className=\"app-section\" id=\"section1\">\n          <h3>Summary</h3>\n          <p>I wanted to make a React website to showcase my React apps - and while this website is still on its way to completion, there are still a few things I need to fix up. I currently have over 600 lines of CSS which I intend on reducing, I’m even considering to rewrite a lot of the CSS using a grid display for easier maneuverability for media queries.</p>\n        </div>\n\n        <div className=\"app-section\" id=\"section2\">\n          <h3>Notable Technologies</h3>\n          <p>During this project, I learned a lot about routing; more specifically, react-router-dom. I’ve had my fair share of frustrations with routing, so much so, that I almost posted on StackOverflow twice! However, I somehow managed to keep playing around with the code in different variations until I was able to overcome them. I’ve used FontAwesome once before but I thought I would mention it since I find it very awesome. It’s easy to use and very customizable. I learned how to use AWS Amplify, as I have used it to deploy this website, and was extremely easy to use.</p>\n        </div>\n\n        <div className=\"app-section\" id=\"section3\">\n          <h3>Troubleshooting and Debugging</h3>\n          <p>The longest running issue I had with developing is definitely the routing part. For the projects page, I had a hard time using a map function to create the routes and another map function to create the links, eventually I moved the routes into the App component and resolved the issue. Deployment wasn’t difficult. I spent a lot of time having issues with mapping my domain name to my AWS Lightsail instance, so I just decided to use AWS Amplify. I believe I had DNS issues because I didn’t delete a record that I was supposed to, so I will have to give Lightsail another go in the future. Maybe I’ll write a doc about it.</p>\n        </div>\n\n        <div className=\"app-section\" id=\"section4\">\n          <h3>Future Development</h3>\n          <p>I still have to clean up the CSS and move to a grid display. Then I want to add a backend to retrieve my site data, such as blogs and docs. While all this is happening, I will have to keep developing other projects to fill up the projects page. My next project will probably focus on APIs and GraphQL, I have a bookmarked GraphQL course on Youtube by The Net Ninja with 36 videos so I guess I should get started as soon as possible.</p>\n        </div>\n\n      </div>\n    </section>\n  )\n}\n\nexport default AbeChoiApp;"]},"metadata":{},"sourceType":"module"}